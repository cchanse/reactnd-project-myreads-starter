{"version":3,"sources":["BooksAPI.js","Bookshelf.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","console","log","BookShelf","_this","this","onChangeStatus","props","filterReadingStatus","status","books","filter","b","indexOf","react_default","a","createElement","className","map","key","style","width","height","backgroundImage","imageLinks","smallThumbnail","onChange","value","disabled","title","authors","React","Component","Search","react_router_dom","exact","to","BooksApp","state","changeShelfStatus","BooksAPI","response","setState","prevState","_this2","data","_this3","react_router","path","render","Bookshelf","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.23d89d93.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token\n};\n\nexport const get = bookId =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => {\n    res.json();\n    console.log(`${api}/books/${book.id}`);\n  });\n\nexport const search = query =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(res => res.json())\n    .then(data => data.books);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass BookShelf extends React.Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired\n    // onChangeStatus: PropTypes.func.isRequired\n  };\n\n  render() {\n    //const { status } = this.state\n    const { onChangeStatus } = this.props;\n\n    // function to filter books by shelf status\n    const filterReadingStatus = status => {\n      return this.props.books.filter(b => b.shelf.indexOf(status) !== -1);\n    };\n\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">Currently Reading</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {filterReadingStatus(\"currentlyReading\").map(book => (\n              <li key={book.id} className=\"book\">\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${book.imageLinks\n                          .smallThumbnail})`\n                      }}\n                    />\n                    <div className=\"book-shelf-changer\">\n                      <select onChange={() => onChangeStatus(book)}>\n                        <option value=\"move\" disabled>\n                          Move to...\n                        </option>\n                        <option value=\"currentlyReading\">\n                          Currently Reading\n                        </option>\n                        <option value=\"wantToRead\">Want to Read</option>\n                        <option value=\"read\">Read</option>\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"book-title\">\n                    {book.title} {book.shelf}\n                  </div>\n                  <div className=\"book-authors\">{book.authors}</div>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n\n        <h2 className=\"bookshelf-title\">Want to Read</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {filterReadingStatus(\"wantToRead\").map(book => (\n              <li key={book.id} className=\"book\">\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${book.imageLinks\n                          .smallThumbnail})`\n                      }}\n                    />\n                    <div className=\"book-shelf-changer\">\n                      <select onChange={() => onChangeStatus(book)}>\n                        <option value=\"move\" disabled>\n                          Move to...\n                        </option>\n                        <option value=\"currentlyReading\">\n                          Currently Reading\n                        </option>\n                        <option value=\"wantToRead\">Want to Read</option>\n                        <option value=\"read\">Read</option>\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  <div className=\"book-authors\">{book.authors}</div>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n\n        <h2 className=\"bookshelf-title\">Read</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {filterReadingStatus(\"read\").map(book => (\n              <li key={book.id} className=\"book\">\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${book.imageLinks\n                          .smallThumbnail})`\n                      }}\n                    />\n                    <div className=\"book-shelf-changer\">\n                      <select onChange={() => onChangeStatus(book)}>\n                        <option value=\"move\" disabled>\n                          Move to...\n                        </option>\n                        <option value=\"currentlyReading\">\n                          Currently Reading\n                        </option>\n                        <option value=\"wantToRead\">Want to Read</option>\n                        <option value=\"read\">Read</option>\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  <div className=\"book-authors\">{book.authors}</div>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookShelf;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>test</p>\n        <Link className=\"close-search\" exact to=\"/\">\n          Return to MyShelf\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Bookshelf from \"./Bookshelf\";\nimport Search from \"./Search\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  };\n\n  // Make Ajax request for books\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState({\n        books\n      });\n    });\n  }\n\n  changeShelfStatus = book => {\n    BooksAPI.update(book, book.shelf).then(response => {\n      // console.log(\"updating book shelf with \" + book.shelf);\n      //update the state with changed shelf status\n      this.setState(prevState => ({\n        books: prevState.books.filter(b => b.id !== book.id).concat(book)\n      }));\n    });\n    // .then(console.log(this.state.books));\n\n    // console.log(this.state.books);\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n              <div className=\"list-books-content\">\n                <div>\n                  <Bookshelf\n                    books={this.state.books}\n                    onChangeStatus={this.changeShelfStatus}\n                  />\n                </div>\n              </div>\n\n              {/*<div className=\"open-search\">\n                <button className=\"open-search\">Search books</button>\n              </div>*/}\n            </div>\n          )}\n        />\n        <Route path=\"/search\" component={Search} />\n\n        {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />{\" \"}\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}